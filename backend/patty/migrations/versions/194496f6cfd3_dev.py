from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


revision: str = "194496f6cfd3"
down_revision: Union[str, None] = "2d779fc6a028"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "adaptation_strategies",
        sa.Column("allow_choice_in_instruction", sa.Boolean(), server_default="true", nullable=False),
    )
    op.add_column(
        "adaptation_strategies",
        sa.Column("allow_arrow_in_statement", sa.Boolean(), server_default="true", nullable=False),
    )
    op.add_column(
        "adaptation_strategies",
        sa.Column("allow_free_text_input_in_statement", sa.Boolean(), server_default="true", nullable=False),
    )
    op.add_column(
        "adaptation_strategies",
        sa.Column("allow_multiple_choices_input_in_statement", sa.Boolean(), server_default="true", nullable=False),
    )
    op.add_column(
        "adaptation_strategies",
        sa.Column("allow_selectable_input_in_statement", sa.Boolean(), server_default="true", nullable=False),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("adaptation_strategies", "allow_selectable_input_in_statement")
    op.drop_column("adaptation_strategies", "allow_multiple_choices_input_in_statement")
    op.drop_column("adaptation_strategies", "allow_free_text_input_in_statement")
    op.drop_column("adaptation_strategies", "allow_arrow_in_statement")
    op.drop_column("adaptation_strategies", "allow_choice_in_instruction")
    # ### end Alembic commands ###

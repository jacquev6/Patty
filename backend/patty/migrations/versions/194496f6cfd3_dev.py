from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


revision: str = "194496f6cfd3"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "adaptation_input",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_by", sa.String(), nullable=False),
        sa.Column("text", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_adaptation_input")),
    )
    op.create_table(
        "adaptation_strategies",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_by", sa.String(), nullable=False),
        sa.Column("model", sa.JSON(), nullable=False),
        sa.Column("system_prompt", sa.String(), nullable=False),
        sa.Column("response_specification", sa.JSON(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_adaptation_strategies")),
    )
    op.create_table(
        "adaptation_batches",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_by", sa.String(), nullable=False),
        sa.Column("strategy_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["strategy_id"],
            ["adaptation_strategies.id"],
            name=op.f("fk_adaptation_batches_strategy_id_adaptation_strategies"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_adaptation_batches")),
        sa.UniqueConstraint("id", "strategy_id", name=op.f("uq_adaptation_batches_id_strategy_id")),
    )
    op.create_table(
        "adaptation_adaptations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_by", sa.String(), nullable=False),
        sa.Column("batch_id", sa.Integer(), nullable=False),
        sa.Column("strategy_id", sa.Integer(), nullable=False),
        sa.Column("input_id", sa.Integer(), nullable=False),
        sa.Column("raw_llm_conversations", sa.JSON(), nullable=False),
        sa.Column("initial_assistant_error", sa.String(), nullable=True),
        sa.Column("initial_assistant_response", sa.JSON(), nullable=True),
        sa.Column("adjustments", sa.JSON(), nullable=False),
        sa.Column("manual_edit", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["batch_id", "strategy_id"],
            ["adaptation_batches.id", "adaptation_batches.strategy_id"],
            name=op.f("fk_adaptation_adaptations_batch_id_strategy_id_adaptation_batches"),
        ),
        sa.ForeignKeyConstraint(
            ["batch_id"], ["adaptation_batches.id"], name=op.f("fk_adaptation_adaptations_batch_id_adaptation_batches")
        ),
        sa.ForeignKeyConstraint(
            ["input_id"], ["adaptation_input.id"], name=op.f("fk_adaptation_adaptations_input_id_adaptation_input")
        ),
        sa.ForeignKeyConstraint(
            ["strategy_id"],
            ["adaptation_strategies.id"],
            name=op.f("fk_adaptation_adaptations_strategy_id_adaptation_strategies"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_adaptation_adaptations")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("adaptation_adaptations")
    op.drop_table("adaptation_batches")
    op.drop_table("adaptation_strategies")
    op.drop_table("adaptation_input")
    # ### end Alembic commands ###

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

revision: str = "f508779ee3fc"
down_revision: Union[str, None] = "a7d2d6571764"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "extraction_strategies",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("created_by_username", sa.String(), nullable=False),
        sa.Column("model", sa.JSON(), nullable=False),
        sa.Column("prompt", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_extraction_strategies")),
    )
    op.create_table(
        "pdf_files",
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("created_by_username", sa.String(), nullable=False),
        sa.Column("sha256", sa.String(), nullable=False),
        sa.Column("bytes_count", sa.Integer(), nullable=False),
        sa.Column("pages_count", sa.Integer(), nullable=False),
        sa.Column("known_file_names", sa.JSON(), nullable=False),
        sa.PrimaryKeyConstraint("sha256", name=op.f("pk_pdf_files")),
    )
    op.create_table(
        "pdf_file_ranges",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("created_by_username", sa.String(), nullable=False),
        sa.Column("pdf_file_sha256", sa.String(), nullable=False),
        sa.Column("pdf_file_first_page_number", sa.Integer(), nullable=False),
        sa.Column("pages_count", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["pdf_file_sha256"], ["pdf_files.sha256"], name=op.f("fk_pdf_file_ranges_pdf_file_sha256_pdf_files")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_pdf_file_ranges")),
    )
    op.create_table(
        "extraction_batches",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("created_by_username", sa.String(), nullable=False),
        sa.Column("strategy_id", sa.Integer(), nullable=False),
        sa.Column("range_id", sa.Integer(), nullable=False),
        sa.Column("run_classification", sa.Boolean(), nullable=False),
        sa.Column("model_for_adaptation", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["range_id"], ["pdf_file_ranges.id"], name=op.f("fk_extraction_batches_range_id_pdf_file_ranges")
        ),
        sa.ForeignKeyConstraint(
            ["strategy_id"],
            ["extraction_strategies.id"],
            name=op.f("fk_extraction_batches_strategy_id_extraction_strategies"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_extraction_batches")),
    )
    op.create_table(
        "page_extractions",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("created_by_username", sa.String(), nullable=False),
        sa.Column("extraction_batch_id", sa.Integer(), nullable=False),
        sa.Column("page_number", sa.Integer(), nullable=False),
        sa.Column("status", sa.Enum("pending", "success", "failure", native_enum=False), nullable=False),
        sa.ForeignKeyConstraint(
            ["extraction_batch_id"],
            ["extraction_batches.id"],
            name=op.f("fk_page_extractions_extraction_batch_id_extraction_batches"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_page_extractions")),
    )
    op.add_column("adaptable_exercises", sa.Column("created_by_page_extraction_id", sa.Integer(), nullable=True))
    op.create_foreign_key(
        op.f("fk_adaptable_exercises_created_by_page_extraction_id_page_extractions"),
        "adaptable_exercises",
        "page_extractions",
        ["created_by_page_extraction_id"],
        ["id"],
    )
    op.add_column("adaptation_strategies", sa.Column("created_by_classification_batch_id", sa.Integer(), nullable=True))
    op.alter_column("adaptation_strategies", "created_by_username", existing_type=sa.VARCHAR(), nullable=True)
    op.create_foreign_key(
        op.f("fk_adaptation_strategies_created_by_classification_batch_id_classification_batches"),
        "adaptation_strategies",
        "classification_batches",
        ["created_by_classification_batch_id"],
        ["id"],
    )
    op.alter_column("adaptations", "created_by_username", existing_type=sa.VARCHAR(), nullable=True)
    op.add_column("classification_batches", sa.Column("created_by_page_extraction_id", sa.Integer(), nullable=True))
    op.alter_column("classification_batches", "created_by_username", existing_type=sa.VARCHAR(), nullable=True)
    op.create_foreign_key(
        op.f("fk_classification_batches_created_by_page_extraction_id_page_extractions"),
        "classification_batches",
        "page_extractions",
        ["created_by_page_extraction_id"],
        ["id"],
    )
    op.add_column("exercise_classes", sa.Column("created_by_classification_batch_id", sa.Integer(), nullable=True))
    op.alter_column("exercise_classes", "created_by_username", existing_type=sa.VARCHAR(), nullable=True)
    op.create_foreign_key(
        op.f("fk_exercise_classes_created_by_classification_batch_id_classification_batches"),
        "exercise_classes",
        "classification_batches",
        ["created_by_classification_batch_id"],
        ["id"],
    )
    op.alter_column("exercises", "created_by_username", existing_type=sa.VARCHAR(), nullable=True)
    # ### end Alembic commands ###
    op.drop_table("old_adaptation_external_exercises")
    op.drop_table("old_adaptation_adaptations")
    op.drop_table("old_adaptation_input")
    op.drop_table("old_adaptation_batches")
    op.drop_table("old_adaptation_strategies")
    op.drop_table("old_adaptation_textbooks")
    op.drop_constraint(
        op.f("fk_old_adaptation_strategy_settings_branches_head_id_id_efb0"),
        "old_adaptation_strategy_settings_branches",
        type_="foreignkey",
    )
    op.drop_table("old_adaptation_strategy_settings")
    op.drop_table("old_adaptation_strategy_settings_branches")

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

revision: str = "f508779ee3fc"
down_revision: Union[str, None] = "a7d2d6571764"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "extraction_batches",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("created_by_username", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_extraction_batches")),
    )
    op.create_table(
        "pdf_files",
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("created_by_username", sa.String(), nullable=False),
        sa.Column("sha256", sa.String(), nullable=False),
        sa.Column("bytes_count", sa.Integer(), nullable=False),
        sa.Column("known_file_names", sa.JSON(), nullable=False),
        sa.PrimaryKeyConstraint("sha256", name=op.f("pk_pdf_files")),
    )
    # ### end Alembic commands ###
    op.drop_table("old_adaptation_external_exercises")
    op.drop_table("old_adaptation_adaptations")
    op.drop_table("old_adaptation_input")
    op.drop_table("old_adaptation_batches")
    op.drop_table("old_adaptation_strategies")
    op.drop_table("old_adaptation_textbooks")
    op.drop_constraint(
        op.f("fk_old_adaptation_strategy_settings_branches_head_id_id_efb0"),
        "old_adaptation_strategy_settings_branches",
        type_="foreignkey",
    )
    op.drop_table("old_adaptation_strategy_settings")
    op.drop_table("old_adaptation_strategy_settings_branches")

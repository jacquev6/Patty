from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

revision: str = "d710f60075da"
down_revision: Union[str, None] = "496af6d75cf6"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.alter_column("textbooks", "editor", new_column_name="publisher")
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "exercise_creations",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("kind", sa.String(), nullable=False),
        sa.Column("at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exercise_creations")),
    )
    op.create_table(
        "exercise_locations",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("kind", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exercise_locations")),
    )
    op.create_table(
        "page_extraction_creations",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("kind", sa.String(), nullable=False),
        sa.Column("at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_page_extraction_creations")),
    )
    op.create_table(
        "exercise_creations__by_user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"], ["exercise_creations.id"], name=op.f("fk_exercise_creations__by_user_id_exercise_creations")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exercise_creations__by_user")),
    )
    op.create_table(
        "exercise_locations__maybe_page_and_number",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("page_number", sa.Integer(), nullable=True),
        sa.Column("exercise_number", sa.String(collation="exercise_number"), nullable=True),
        sa.ForeignKeyConstraint(
            ["id"],
            ["exercise_locations.id"],
            name=op.f("fk_exercise_locations__maybe_page_and_number_id_exercise_locations"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exercise_locations__maybe_page_and_number")),
    )
    op.create_table(
        "exercise_locations__textbook",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("textbook_id", sa.Integer(), nullable=False),
        sa.Column("page_number", sa.Integer(), nullable=False),
        sa.Column("exercise_number", sa.String(collation="exercise_number"), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"], ["exercise_locations.id"], name=op.f("fk_exercise_locations__textbook_id_exercise_locations")
        ),
        sa.ForeignKeyConstraint(
            ["textbook_id"], ["textbooks.id"], name=op.f("fk_exercise_locations__textbook_textbook_id_textbooks")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exercise_locations__textbook")),
    )
    op.create_table(
        "exercise_creations__by_page_extraction",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("page_extraction_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["exercise_creations.id"],
            name=op.f("fk_exercise_creations__by_page_extraction_id_exercise_creations"),
        ),
        sa.ForeignKeyConstraint(
            ["page_extraction_id"],
            ["page_extractions.id"],
            name=op.f("fk_exercise_creations__by_page_extraction_page_extraction_id_page_extractions"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exercise_creations__by_page_extraction")),
    )
    op.create_table(
        "page_extraction_creations__by_sandbox_extraction_batch",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("sandbox_extraction_batch_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["page_extraction_creations.id"],
            name=op.f("fk_page_extraction_creations__by_sandbox_extraction_batch_id_page_extraction_creations"),
        ),
        sa.ForeignKeyConstraint(
            ["sandbox_extraction_batch_id"],
            ["extraction_batches.id"],
            name=op.f(
                "fk_page_extraction_creations__by_sandbox_extraction_batch_sandbox_extraction_batch_id_extraction_batches"
            ),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_page_extraction_creations__by_sandbox_extraction_batch")),
    )
    op.drop_constraint(
        op.f("fk_adaptable_exercises_created_by_page_extraction_id_pa_8c42"), "adaptable_exercises", type_="foreignkey"
    )
    op.add_column("exercises", sa.Column("created_id", sa.Integer(), nullable=True))
    op.add_column("exercises", sa.Column("location_id", sa.Integer(), nullable=True))
    op.alter_column("exercises", "created_at", existing_type=postgresql.TIMESTAMP(timezone=True), nullable=True)
    op.drop_constraint(op.f("fk_exercises_textbook_id_textbooks"), "exercises", type_="foreignkey")
    op.create_foreign_key(
        op.f("fk_exercises_location_id_exercise_locations"), "exercises", "exercise_locations", ["location_id"], ["id"]
    )
    op.create_foreign_key(
        op.f("fk_exercises_created_id_exercise_creations"), "exercises", "exercise_creations", ["created_id"], ["id"]
    )
    op.add_column("page_extractions", sa.Column("created_id", sa.Integer(), nullable=True))
    op.add_column("page_extractions", sa.Column("range_id", sa.Integer(), nullable=True))
    op.add_column("page_extractions", sa.Column("strategy_id", sa.Integer(), nullable=True))
    op.add_column("page_extractions", sa.Column("run_classification", sa.Boolean(), nullable=True))
    op.add_column("page_extractions", sa.Column("model_for_adaptation", sa.JSON(), nullable=True))
    op.alter_column("page_extractions", "created_at", existing_type=postgresql.TIMESTAMP(timezone=True), nullable=True)
    op.alter_column("page_extractions", "created_by_username", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("page_extractions", "extraction_batch_id", existing_type=sa.INTEGER(), nullable=True)
    op.drop_constraint(
        op.f("fk_page_extractions_extraction_batch_id_extraction_batches"), "page_extractions", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("fk_page_extractions_range_id_pdf_file_ranges"),
        "page_extractions",
        "pdf_file_ranges",
        ["range_id"],
        ["id"],
    )
    op.create_foreign_key(
        op.f("fk_page_extractions_created_id_page_extraction_creations"),
        "page_extractions",
        "page_extraction_creations",
        ["created_id"],
        ["id"],
    )
    op.create_foreign_key(
        op.f("fk_page_extractions_strategy_id_extraction_strategies"),
        "page_extractions",
        "extraction_strategies",
        ["strategy_id"],
        ["id"],
    )
    # ### end Alembic commands ###

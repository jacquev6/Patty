from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


revision: str = "b9223189b6ef"
down_revision: Union[str, None] = "d710f60075da"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "classification_chunks",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("model_for_adaptation", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_classification_chunks")),
    )
    op.create_table(
        "exercise_classes",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("latest_strategy_settings_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["latest_strategy_settings_id"],
            ["adaptation_settings.id"],
            name=op.f("fk_exercise_classes_latest_strategy_settings_id_adaptation_settings"),
            use_alter=True,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exercise_classes")),
    )
    op.create_table(
        "exercises",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("kind", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exercises")),
    )
    op.create_table(
        "extraction_settings",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("prompt", sa.String(), nullable=False),
        sa.Column("created_by", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_extraction_settings")),
    )
    op.create_table(
        "pdf_files",
        sa.Column("sha256", sa.String(), nullable=False),
        sa.Column("bytes_count", sa.Integer(), nullable=False),
        sa.Column("pages_count", sa.Integer(), nullable=False),
        sa.Column("known_file_names", sa.JSON(), nullable=False),
        sa.Column("created_by", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("sha256", name=op.f("pk_pdf_files")),
    )
    op.create_table(
        "sandbox_classification_batches",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_by", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("model_for_adaptation", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_sandbox_classification_batches")),
    )
    op.create_table(
        "textbooks",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("publisher", sa.String(), nullable=True),
        sa.Column("year", sa.Integer(), nullable=True),
        sa.Column("isbn", sa.String(), nullable=True),
        sa.Column("created_by", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_textbooks")),
    )
    op.create_table(
        "adaptation_settings",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("exercise_class_id", sa.Integer(), nullable=True),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("system_prompt", sa.String(), nullable=False),
        sa.Column("response_specification", sa.JSON(), nullable=False),
        sa.Column("created_by", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["exercise_class_id"],
            ["exercise_classes.id"],
            name=op.f("fk_adaptation_settings_exercise_class_id_exercise_classes"),
        ),
        sa.ForeignKeyConstraint(
            ["parent_id"], ["adaptation_settings.id"], name=op.f("fk_adaptation_settings_parent_id_adaptation_settings")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_adaptation_settings")),
    )
    op.create_table(
        "classification_chunk_creations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("kind", sa.String(), nullable=False),
        sa.Column("at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["classification_chunks.id"],
            name=op.f("fk_classification_chunk_creations_id_classification_chunks"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_classification_chunk_creations")),
    )
    op.create_table(
        "exercise_class_creations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("kind", sa.String(), nullable=False),
        sa.Column("at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"], ["exercise_classes.id"], name=op.f("fk_exercise_class_creations_id_exercise_classes")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exercise_class_creations")),
    )
    op.create_table(
        "exercise_creations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("kind", sa.String(), nullable=False),
        sa.Column("at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["id"], ["exercises.id"], name=op.f("fk_exercise_creations_id_exercises")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exercise_creations")),
    )
    op.create_table(
        "exercise_locations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("kind", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["id"], ["exercises.id"], name=op.f("fk_exercise_locations_id_exercises")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exercise_locations")),
    )
    op.create_table(
        "exercises__adaptable",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("full_text", sa.String(), nullable=False),
        sa.Column("instruction_hint_example_text", sa.String(), nullable=True),
        sa.Column("statement_text", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(["id"], ["exercises.id"], name=op.f("fk_exercises__adaptable_id_exercises")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exercises__adaptable")),
    )
    op.create_table(
        "exercises__external",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("original_file_name", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["id"], ["exercises.id"], name=op.f("fk_exercises__external_id_exercises")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exercises__external")),
    )
    op.create_table(
        "pdf_file_ranges",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("first_page_number", sa.Integer(), nullable=False),
        sa.Column("pages_count", sa.Integer(), nullable=False),
        sa.Column("pdf_file_sha256", sa.String(), nullable=False),
        sa.Column("created_by", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["pdf_file_sha256"], ["pdf_files.sha256"], name=op.f("fk_pdf_file_ranges_pdf_file_sha256_pdf_files")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_pdf_file_ranges")),
    )
    op.create_table(
        "adaptations",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("exercise_id", sa.Integer(), nullable=False),
        sa.Column("settings_id", sa.Integer(), nullable=False),
        sa.Column("model", sa.JSON(), nullable=False),
        sa.Column("raw_llm_conversations", sa.JSON(), nullable=False),
        sa.Column("initial_assistant_response", sa.JSON(), nullable=True),
        sa.Column("adjustments", sa.JSON(), nullable=False),
        sa.Column("manual_edit", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["exercise_id"], ["exercises__adaptable.id"], name=op.f("fk_adaptations_exercise_id_exercises__adaptable")
        ),
        sa.ForeignKeyConstraint(
            ["settings_id"], ["adaptation_settings.id"], name=op.f("fk_adaptations_settings_id_adaptation_settings")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_adaptations")),
    )
    op.create_table(
        "classification_chunk_creations__by_sandbox_batch",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("sandbox_classification_batch_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["classification_chunk_creations.id"],
            name=op.f("fk_classification_chunk_creations__by_sandbox_batch_id_classification_chunk_creations"),
        ),
        sa.ForeignKeyConstraint(
            ["sandbox_classification_batch_id"],
            ["sandbox_classification_batches.id"],
            name=op.f(
                "fk_classification_chunk_creations__by_sandbox_batch_sandbox_classification_batch_id_sandbox_classification_batches"
            ),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_classification_chunk_creations__by_sandbox_batch")),
    )
    op.create_table(
        "classifications",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("kind", sa.String(), nullable=False),
        sa.Column("exercise_id", sa.Integer(), nullable=False),
        sa.Column("at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("exercise_class_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["exercise_class_id"],
            ["exercise_classes.id"],
            name=op.f("fk_classifications_exercise_class_id_exercise_classes"),
        ),
        sa.ForeignKeyConstraint(
            ["exercise_id"],
            ["exercises__adaptable.id"],
            name=op.f("fk_classifications_exercise_id_exercises__adaptable"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_classifications")),
    )
    op.create_table(
        "exercise_class_creations__by_chunk",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("classification_chunk_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["classification_chunk_id"],
            ["classification_chunks.id"],
            name=op.f("fk_exercise_class_creations__by_chunk_classification_chunk_id_classification_chunks"),
        ),
        sa.ForeignKeyConstraint(
            ["id"],
            ["exercise_class_creations.id"],
            name=op.f("fk_exercise_class_creations__by_chunk_id_exercise_class_creations"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exercise_class_creations__by_chunk")),
    )
    op.create_table(
        "exercise_class_creations__by_user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["exercise_class_creations.id"],
            name=op.f("fk_exercise_class_creations__by_user_id_exercise_class_creations"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exercise_class_creations__by_user")),
    )
    op.create_table(
        "exercise_creations__by_user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"], ["exercise_creations.id"], name=op.f("fk_exercise_creations__by_user_id_exercise_creations")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exercise_creations__by_user")),
    )
    op.create_table(
        "exercise_locations__maybe_page_and_number",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("page_number", sa.Integer(), nullable=True),
        sa.Column("exercise_number", sa.String(collation="exercise_number"), nullable=True),
        sa.ForeignKeyConstraint(
            ["id"],
            ["exercise_locations.id"],
            name=op.f("fk_exercise_locations__maybe_page_and_number_id_exercise_locations"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exercise_locations__maybe_page_and_number")),
    )
    op.create_table(
        "exercise_locations__textbook",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("textbook_id", sa.Integer(), nullable=False),
        sa.Column("page_number", sa.Integer(), nullable=False),
        sa.Column("exercise_number", sa.String(collation="exercise_number"), nullable=False),
        sa.Column("removed_from_textbook", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"], ["exercise_locations.id"], name=op.f("fk_exercise_locations__textbook_id_exercise_locations")
        ),
        sa.ForeignKeyConstraint(
            ["textbook_id"], ["textbooks.id"], name=op.f("fk_exercise_locations__textbook_textbook_id_textbooks")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exercise_locations__textbook")),
    )
    op.create_table(
        "page_extractions",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("pdf_file_range_id", sa.Integer(), nullable=False),
        sa.Column("pdf_page_number", sa.Integer(), nullable=False),
        sa.Column("settings_id", sa.Integer(), nullable=False),
        sa.Column("model", sa.JSON(), nullable=False),
        sa.Column("run_classification", sa.Boolean(), nullable=False),
        sa.Column("assistant_response", sa.JSON(), nullable=True),
        sa.Column("model_for_adaptation", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["pdf_file_range_id"],
            ["pdf_file_ranges.id"],
            name=op.f("fk_page_extractions_pdf_file_range_id_pdf_file_ranges"),
        ),
        sa.ForeignKeyConstraint(
            ["settings_id"],
            ["extraction_settings.id"],
            name=op.f("fk_page_extractions_settings_id_extraction_settings"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_page_extractions")),
    )
    op.create_table(
        "sandbox_adaptation_batches",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("settings_id", sa.Integer(), nullable=False),
        sa.Column("model", sa.JSON(), nullable=False),
        sa.Column("created_by", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["settings_id"],
            ["adaptation_settings.id"],
            name=op.f("fk_sandbox_adaptation_batches_settings_id_adaptation_settings"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_sandbox_adaptation_batches")),
    )
    op.create_table(
        "sandbox_extraction_batches",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("pdf_file_range_id", sa.Integer(), nullable=False),
        sa.Column("settings_id", sa.Integer(), nullable=False),
        sa.Column("model", sa.JSON(), nullable=False),
        sa.Column("run_classification", sa.Boolean(), nullable=False),
        sa.Column("created_by", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("model_for_adaptation", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["pdf_file_range_id"],
            ["pdf_file_ranges.id"],
            name=op.f("fk_sandbox_extraction_batches_pdf_file_range_id_pdf_file_ranges"),
        ),
        sa.ForeignKeyConstraint(
            ["settings_id"],
            ["extraction_settings.id"],
            name=op.f("fk_sandbox_extraction_batches_settings_id_extraction_settings"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_sandbox_extraction_batches")),
    )
    op.create_table(
        "textbook_extraction_batches",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("pdf_file_range_id", sa.Integer(), nullable=False),
        sa.Column("textbook_id", sa.Integer(), nullable=False),
        sa.Column("removed_from_textbook", sa.Boolean(), nullable=False),
        sa.Column("first_textbook_page_number", sa.Integer(), nullable=False),
        sa.Column("model_for_extraction", sa.JSON(), nullable=False),
        sa.Column("model_for_adaptation", sa.JSON(), nullable=False),
        sa.Column("created_by", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["pdf_file_range_id"],
            ["pdf_file_ranges.id"],
            name=op.f("fk_textbook_extraction_batches_pdf_file_range_id_pdf_file_ranges"),
        ),
        sa.ForeignKeyConstraint(
            ["textbook_id"], ["textbooks.id"], name=op.f("fk_textbook_extraction_batches_textbook_id_textbooks")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_textbook_extraction_batches")),
    )
    op.create_table(
        "adaptation_creations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("kind", sa.String(), nullable=False),
        sa.Column("at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["id"], ["adaptations.id"], name=op.f("fk_adaptation_creations_id_adaptations")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_adaptation_creations")),
    )
    op.create_table(
        "classification_chunk_creations__by_page_extraction",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("page_extraction_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["classification_chunk_creations.id"],
            name=op.f("fk_classification_chunk_creations__by_page_extraction_id_classification_chunk_creations"),
        ),
        sa.ForeignKeyConstraint(
            ["page_extraction_id"],
            ["page_extractions.id"],
            name=op.f("fk_classification_chunk_creations__by_page_extraction_page_extraction_id_page_extractions"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_classification_chunk_creations__by_page_extraction")),
    )
    op.create_table(
        "classifications__by_chunk",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("classification_chunk_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["classification_chunk_id"],
            ["classification_chunks.id"],
            name=op.f("fk_classifications__by_chunk_classification_chunk_id_classification_chunks"),
        ),
        sa.ForeignKeyConstraint(
            ["id"], ["classifications.id"], name=op.f("fk_classifications__by_chunk_id_classifications")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_classifications__by_chunk")),
    )
    op.create_table(
        "classifications__by_user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"], ["classifications.id"], name=op.f("fk_classifications__by_user_id_classifications")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_classifications__by_user")),
    )
    op.create_table(
        "exercise_creations__by_page_extraction",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("page_extraction_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["exercise_creations.id"],
            name=op.f("fk_exercise_creations__by_page_extraction_id_exercise_creations"),
        ),
        sa.ForeignKeyConstraint(
            ["page_extraction_id"],
            ["page_extractions.id"],
            name=op.f("fk_exercise_creations__by_page_extraction_page_extraction_id_page_extractions"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exercise_creations__by_page_extraction")),
    )
    op.create_table(
        "page_extraction_creations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("kind", sa.String(), nullable=False),
        sa.Column("at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"], ["page_extractions.id"], name=op.f("fk_page_extraction_creations_id_page_extractions")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_page_extraction_creations")),
    )
    op.create_table(
        "adaptation_creations__by_chunk",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("classification_chunk_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["classification_chunk_id"],
            ["classification_chunks.id"],
            name=op.f("fk_adaptation_creations__by_chunk_classification_chunk_id_classification_chunks"),
        ),
        sa.ForeignKeyConstraint(
            ["id"], ["adaptation_creations.id"], name=op.f("fk_adaptation_creations__by_chunk_id_adaptation_creations")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_adaptation_creations__by_chunk")),
    )
    op.create_table(
        "adaptation_creations__by_sandbox_batch",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("sandbox_adaptation_batch_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["adaptation_creations.id"],
            name=op.f("fk_adaptation_creations__by_sandbox_batch_id_adaptation_creations"),
        ),
        sa.ForeignKeyConstraint(
            ["sandbox_adaptation_batch_id"],
            ["sandbox_adaptation_batches.id"],
            name=op.f(
                "fk_adaptation_creations__by_sandbox_batch_sandbox_adaptation_batch_id_sandbox_adaptation_batches"
            ),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_adaptation_creations__by_sandbox_batch")),
    )
    op.create_table(
        "adaptation_creations__by_user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"], ["adaptation_creations.id"], name=op.f("fk_adaptation_creations__by_user_id_adaptation_creations")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_adaptation_creations__by_user")),
    )
    op.create_table(
        "page_extraction_creations__by_sandbox_batch",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("sandbox_extraction_batch_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["page_extraction_creations.id"],
            name=op.f("fk_page_extraction_creations__by_sandbox_batch_id_page_extraction_creations"),
        ),
        sa.ForeignKeyConstraint(
            ["sandbox_extraction_batch_id"],
            ["sandbox_extraction_batches.id"],
            name=op.f(
                "fk_page_extraction_creations__by_sandbox_batch_sandbox_extraction_batch_id_sandbox_extraction_batches"
            ),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_page_extraction_creations__by_sandbox_batch")),
    )
    op.create_table(
        "page_extraction_creations__by_textbook",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("textbook_extraction_batch_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["page_extraction_creations.id"],
            name=op.f("fk_page_extraction_creations__by_textbook_id_page_extraction_creations"),
        ),
        sa.ForeignKeyConstraint(
            ["textbook_extraction_batch_id"],
            ["textbook_extraction_batches.id"],
            name=op.f(
                "fk_page_extraction_creations__by_textbook_textbook_extraction_batch_id_textbook_extraction_batches"
            ),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_page_extraction_creations__by_textbook")),
    )
    # ### end Alembic commands ###
    op.create_foreign_key(
        op.f("fk_exercise_classes_latest_strategy_settings_id_adaptation_settings"),
        "exercise_classes",
        "adaptation_settings",
        ["latest_strategy_settings_id"],
        ["id"],
        use_alter=True,
    )

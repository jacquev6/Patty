from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

revision: str = "1d0221e1575e"
down_revision: Union[str, None] = "8428857d1254"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "exercise_adaptation_creations",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("kind", sa.String(), nullable=False),
        sa.Column("at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exercise_adaptation_creations")),
    )
    op.create_table(
        "exercise_class_creations",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("kind", sa.String(), nullable=False),
        sa.Column("at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exercise_class_creations")),
    )
    op.create_table(
        "exercise_adaptation_creations__by_user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["exercise_adaptation_creations.id"],
            name=op.f("fk_exercise_adaptation_creations__by_user_id_exercise_adaptation_creations"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exercise_adaptation_creations__by_user")),
    )
    op.create_table(
        "exercise_class_creations__by_user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["exercise_class_creations.id"],
            name=op.f("fk_exercise_class_creations__by_user_id_exercise_class_creations"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exercise_class_creations__by_user")),
    )
    op.create_table(
        "exercise_adaptation_creations__by_sandbox_classification_batch",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("sandbox_classification_batch_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["exercise_adaptation_creations.id"],
            name=op.f(
                "fk_exercise_adaptation_creations__by_sandbox_classification_batch_id_exercise_adaptation_creations"
            ),
        ),
        sa.ForeignKeyConstraint(
            ["sandbox_classification_batch_id"],
            ["sandbox_classification_batches.id"],
            name=op.f(
                "fk_exercise_adaptation_creations__by_sandbox_classification_batch_sandbox_classification_batch_id_sandbox_classification_batches"
            ),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exercise_adaptation_creations__by_sandbox_classification_batch")),
    )
    op.create_table(
        "exercise_class_creations__by_sandbox_classification_batch",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("sandbox_classification_batch_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["exercise_class_creations.id"],
            name=op.f("fk_exercise_class_creations__by_sandbox_classification_batch_id_exercise_class_creations"),
        ),
        sa.ForeignKeyConstraint(
            ["sandbox_classification_batch_id"],
            ["sandbox_classification_batches.id"],
            name=op.f(
                "fk_exercise_class_creations__by_sandbox_classification_batch_sandbox_classification_batch_id_sandbox_classification_batches"
            ),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exercise_class_creations__by_sandbox_classification_batch")),
    )
    op.create_table(
        "exercise_adaptation_creations__by_sandbox_adaptation_batch",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("sandbox_adaptation_batch_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["exercise_adaptation_creations.id"],
            name=op.f("fk_exercise_adaptation_creations__by_sandbox_adaptation_batch_id_exercise_adaptation_creations"),
        ),
        sa.ForeignKeyConstraint(
            ["sandbox_adaptation_batch_id"],
            ["sandbox_adaptation_batches.id"],
            name=op.f(
                "fk_exercise_adaptation_creations__by_sandbox_adaptation_batch_sandbox_adaptation_batch_id_sandbox_adaptation_batches"
            ),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exercise_adaptation_creations__by_sandbox_adaptation_batch")),
    )
    op.add_column("adaptations", sa.Column("created_id", sa.Integer(), nullable=True))
    op.alter_column("adaptations", "created_at", existing_type=postgresql.TIMESTAMP(timezone=True), nullable=True)
    op.drop_constraint(
        op.f("fk_adaptations_classification_batch_id_sandbox_classifi_8ffd"), "adaptations", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("fk_adaptations_adaptation_batch_id_sandbox_adaptation_batches"), "adaptations", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("fk_adaptations_created_id_exercise_adaptation_creations"),
        "adaptations",
        "exercise_adaptation_creations",
        ["created_id"],
        ["id"],
    )
    op.add_column("exercise_classes", sa.Column("created_id", sa.Integer(), nullable=True))
    op.alter_column("exercise_classes", "created_at", existing_type=postgresql.TIMESTAMP(timezone=True), nullable=True)
    op.drop_constraint(
        op.f("fk_exercise_classes_created_by_classification_batch_id__61d5"), "exercise_classes", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("fk_exercise_classes_created_id_exercise_class_creations"),
        "exercise_classes",
        "exercise_class_creations",
        ["created_id"],
        ["id"],
    )
    # ### end Alembic commands ###

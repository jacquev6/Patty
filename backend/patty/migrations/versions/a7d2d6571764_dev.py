from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


revision: str = "a7d2d6571764"
down_revision: Union[str, None] = "a5c3c863f388"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "classification_strategies",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_classification_strategies")),
    )
    op.create_table(
        "exercise_classes",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("created_by_username", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("latest_strategy_settings_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["latest_strategy_settings_id"],
            ["adaptation_strategy_settings.id"],
            name=op.f("fk_exercise_classes_latest_strategy_settings_id_adaptation_strategy_settings"),
            use_alter=True,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exercise_classes")),
    )
    op.create_table(
        "extraction_strategies",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_extraction_strategies")),
    )
    op.create_table(
        "pdf_files",
        sa.Column("sha256", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("sha256", name=op.f("pk_pdf_files")),
    )
    op.create_table(
        "textbooks",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("created_by_username", sa.String(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_textbooks")),
    )
    op.create_table(
        "adaptation_strategy_settings",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("created_by_username", sa.String(), nullable=False),
        sa.Column("exercise_class_id", sa.Integer(), nullable=True),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("system_prompt", sa.String(), nullable=False),
        sa.Column("response_specification", sa.JSON(), nullable=False),
        sa.ForeignKeyConstraint(
            ["exercise_class_id"],
            ["exercise_classes.id"],
            name=op.f("fk_adaptation_strategy_settings_exercise_class_id_exercise_classes"),
        ),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["adaptation_strategy_settings.id"],
            name=op.f("fk_adaptation_strategy_settings_parent_id_adaptation_strategy_settings"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_adaptation_strategy_settings")),
    )
    op.create_table(
        "classifications",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("strategy_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["strategy_id"],
            ["classification_strategies.id"],
            name=op.f("fk_classifications_strategy_id_classification_strategies"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_classifications")),
    )
    op.create_table(
        "exercises",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("kind", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("created_by_username", sa.String(), nullable=False),
        sa.Column("textbook_id", sa.Integer(), nullable=True),
        sa.Column("removed_from_textbook", sa.Boolean(), nullable=False),
        sa.Column("page_number", sa.Integer(), nullable=True),
        sa.Column("exercise_number", sa.String(collation="exercise_number"), nullable=True),
        sa.ForeignKeyConstraint(["textbook_id"], ["textbooks.id"], name=op.f("fk_exercises_textbook_id_textbooks")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_exercises")),
    )
    op.create_table(
        "textbook_ranges",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("textbook_id", sa.Integer(), nullable=False),
        sa.Column("pdf_file_sha256", sa.String(), nullable=True),
        sa.Column("textbook_start_page_number", sa.Integer(), nullable=False),
        sa.Column("pdf_file_start_page_number", sa.Integer(), nullable=False),
        sa.Column("pages_count", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["pdf_file_sha256"], ["pdf_files.sha256"], name=op.f("fk_textbook_ranges_pdf_file_sha256_pdf_files")
        ),
        sa.ForeignKeyConstraint(
            ["textbook_id"], ["textbooks.id"], name=op.f("fk_textbook_ranges_textbook_id_textbooks")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_textbook_ranges")),
    )
    op.create_table(
        "adaptation_strategies",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("created_by_username", sa.String(), nullable=False),
        sa.Column("settings_id", sa.Integer(), nullable=False),
        sa.Column("model", sa.JSON(), nullable=False),
        sa.ForeignKeyConstraint(
            ["settings_id"],
            ["adaptation_strategy_settings.id"],
            name=op.f("fk_adaptation_strategies_settings_id_adaptation_strategy_settings"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_adaptation_strategies")),
    )
    op.create_table(
        "external_exercises",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("original_file_name", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["id"], ["exercises.id"], name=op.f("fk_external_exercises_id_exercises")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_external_exercises")),
    )
    op.create_table(
        "extractions",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("created_by_username", sa.String(), nullable=False),
        sa.Column("strategy_id", sa.Integer(), nullable=False),
        sa.Column("range_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["range_id"], ["textbook_ranges.id"], name=op.f("fk_extractions_range_id_textbook_ranges")
        ),
        sa.ForeignKeyConstraint(
            ["strategy_id"], ["extraction_strategies.id"], name=op.f("fk_extractions_strategy_id_extraction_strategies")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_extractions")),
    )
    op.create_table(
        "adaptable_exercises",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_by_extraction_id", sa.Integer(), nullable=True),
        sa.Column("full_text", sa.String(), nullable=False),
        sa.Column("classified_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("classified_by_classification_id", sa.Integer(), nullable=True),
        sa.Column("classified_by_username", sa.String(), nullable=True),
        sa.Column("exercise_class_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["classified_by_classification_id"],
            ["classifications.id"],
            name=op.f("fk_adaptable_exercises_classified_by_classification_id_classifications"),
        ),
        sa.ForeignKeyConstraint(
            ["created_by_extraction_id"],
            ["extractions.id"],
            name=op.f("fk_adaptable_exercises_created_by_extraction_id_extractions"),
        ),
        sa.ForeignKeyConstraint(
            ["exercise_class_id"],
            ["exercise_classes.id"],
            name=op.f("fk_adaptable_exercises_exercise_class_id_exercise_classes"),
        ),
        sa.ForeignKeyConstraint(["id"], ["exercises.id"], name=op.f("fk_adaptable_exercises_id_exercises")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_adaptable_exercises")),
    )
    op.create_table(
        "sandbox_adaptation_batches",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("created_by_username", sa.String(), nullable=False),
        sa.Column("strategy_id", sa.Integer(), nullable=False),
        sa.Column("textbook_id", sa.Integer(), nullable=True),
        sa.Column("removed_from_textbook", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["strategy_id"],
            ["adaptation_strategies.id"],
            name=op.f("fk_sandbox_adaptation_batches_strategy_id_adaptation_strategies"),
        ),
        sa.ForeignKeyConstraint(
            ["textbook_id"], ["textbooks.id"], name=op.f("fk_sandbox_adaptation_batches_textbook_id_textbooks")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_sandbox_adaptation_batches")),
    )
    op.create_table(
        "adaptations",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("created_by_username", sa.String(), nullable=False),
        sa.Column("exercise_id", sa.Integer(), nullable=False),
        sa.Column("strategy_id", sa.Integer(), nullable=False),
        sa.Column("sandbox_batch_id", sa.Integer(), nullable=False),
        sa.Column("raw_llm_conversations", sa.JSON(), nullable=False),
        sa.Column("initial_assistant_response", sa.JSON(), nullable=True),
        sa.Column("adjustments", sa.JSON(), nullable=False),
        sa.Column("manual_edit", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["exercise_id"], ["adaptable_exercises.id"], name=op.f("fk_adaptations_exercise_id_adaptable_exercises")
        ),
        sa.ForeignKeyConstraint(
            ["sandbox_batch_id"],
            ["sandbox_adaptation_batches.id"],
            name=op.f("fk_adaptations_sandbox_batch_id_sandbox_adaptation_batches"),
        ),
        sa.ForeignKeyConstraint(
            ["strategy_id"], ["adaptation_strategies.id"], name=op.f("fk_adaptations_strategy_id_adaptation_strategies")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_adaptations")),
    )
    # ### end Alembic commands ###
    op.create_foreign_key(
        op.f("fk_exercise_classes_latest_strategy_settings_id_adaptation_strategy_settings"),
        "exercise_classes",
        "adaptation_strategy_settings",
        ["latest_strategy_settings_id"],
        ["id"],
        use_alter=True,
    )

/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/api/health': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get Health */
    get: operations['get_health_api_health_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    /** Get Health */
    head: operations['get_health_api_health_head']
    patch?: never
    trace?: never
  }
  '/api/available-llm-models': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get Available Llm Models */
    get: operations['get_available_llm_models_api_available_llm_models_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/adaptation-llm-response-schema': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** Get Llm Response Schema */
    post: operations['get_llm_response_schema_api_adaptation_llm_response_schema_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/latest-adaptation-batch': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get Latest Adaptation Batch */
    get: operations['get_latest_adaptation_batch_api_latest_adaptation_batch_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/adaptation-batches': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get Adaptation Batches */
    get: operations['get_adaptation_batches_api_adaptation_batches_get']
    put?: never
    /** Post Adaptation Batch */
    post: operations['post_adaptation_batch_api_adaptation_batches_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/adaptation-batches/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get Adaptation Batch */
    get: operations['get_adaptation_batch_api_adaptation_batches__id__get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/classification-batches': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get Classification Batches */
    get: operations['get_classification_batches_api_classification_batches_get']
    put?: never
    /** Create Classification Batch */
    post: operations['create_classification_batch_api_classification_batches_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/classification-batches/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get Classification Batch */
    get: operations['get_classification_batch_api_classification_batches__id__get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/textbooks': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get Textbooks */
    get: operations['get_textbooks_api_textbooks_get']
    put?: never
    /** Post Textbook */
    post: operations['post_textbook_api_textbooks_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/textbooks/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get Textbook */
    get: operations['get_textbook_api_textbooks__id__get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/textbooks/{id}/adaptation-batches': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** Post Textbook Adaptation Batch */
    post: operations['post_textbook_adaptation_batch_api_textbooks__id__adaptation_batches_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/textbooks/{textbook_id}/adaptation-batches/{adaptation_batch_id}/removed': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** Put Textbook Adaptation Batch Removed */
    put: operations['put_textbook_adaptation_batch_removed_api_textbooks__textbook_id__adaptation_batches__adaptation_batch_id__removed_put']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/textbooks/{textbook_id}/adaptations/{adaptation_id}/removed': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** Put Textbook Adaptation Removed */
    put: operations['put_textbook_adaptation_removed_api_textbooks__textbook_id__adaptations__adaptation_id__removed_put']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/textbooks/{textbook_id}/external-exercises': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** Post Textbook External Exercises */
    post: operations['post_textbook_external_exercises_api_textbooks__textbook_id__external_exercises_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/textbooks/{textbook_id}/external-exercises/{external_exercise_id}/removed': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** Put Textbook External Exercises Removed */
    put: operations['put_textbook_external_exercises_removed_api_textbooks__textbook_id__external_exercises__external_exercise_id__removed_put']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/adaptations/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get Adaptation */
    get: operations['get_adaptation_api_adaptations__id__get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/adaptations/{id}/adjustment': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** Post Adaptation Adjustment */
    post: operations['post_adaptation_adjustment_api_adaptations__id__adjustment_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/adaptations/{id}/last-adjustment': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    /** Delete Adaptation Last Adjustment */
    delete: operations['delete_adaptation_last_adjustment_api_adaptations__id__last_adjustment_delete']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/adaptations/{id}/manual-edit': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** Put Adaptation Manual Edit */
    put: operations['put_adaptation_manual_edit_api_adaptations__id__manual_edit_put']
    post?: never
    /** Delete Adaptation Manual Edit */
    delete: operations['delete_adaptation_manual_edit_api_adaptations__id__manual_edit_delete']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/export/adaptation-batch/{id}.html': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Export Adaptation Batch */
    get: operations['export_adaptation_batch_api_export_adaptation_batch__id__html_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/export/adaptation/{id}.html': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Export Adaptation */
    get: operations['export_adaptation_api_export_adaptation__id__html_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/export/textbook/{id}.html': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Export Textbook */
    get: operations['export_textbook_api_export_textbook__id__html_get']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/token': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** Login */
    post: operations['login_api_token_post']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    /** Adjustment */
    Adjustment: {
      /** Userprompt */
      userPrompt: string
      /** Assistantresponse */
      assistantResponse:
        | components['schemas']['AssistantSuccess']
        | components['schemas']['AssistantInvalidJsonError']
        | components['schemas']['AssistantNotJsonError']
        | components['schemas']['AssistantUnknownError']
    }
    /** ApiAdaptation */
    ApiAdaptation: {
      /** Id */
      id: string
      /** Createdby */
      createdBy: string
      /** Adaptationbatchid */
      adaptationBatchId: string
      strategy: components['schemas']['ApiStrategy-Output']
      input: components['schemas']['ApiInput']
      /** Rawllmconversations */
      rawLlmConversations: unknown[]
      /** Initialassistantresponse */
      initialAssistantResponse:
        | components['schemas']['AssistantSuccess']
        | components['schemas']['AssistantInvalidJsonError']
        | components['schemas']['AssistantNotJsonError']
        | components['schemas']['AssistantUnknownError']
        | null
      /** Adjustments */
      adjustments: components['schemas']['Adjustment'][]
      manualEdit: components['schemas']['patty__adapted__Exercise-Output'] | null
      /** Removedfromtextbook */
      removedFromTextbook: boolean
    }
    /** ApiInput */
    ApiInput: {
      /** Pagenumber */
      pageNumber: number | null
      /** Exercisenumber */
      exerciseNumber: string | null
      /** Text */
      text: string
    }
    /** ApiStrategy */
    'ApiStrategy-Input': {
      /** Model */
      model:
        | components['schemas']['DummyModel']
        | components['schemas']['MistralAiModel']
        | components['schemas']['OpenAiModel']
      settings: components['schemas']['ApiStrategySettings-Input']
    }
    /** ApiStrategy */
    'ApiStrategy-Output': {
      /** Model */
      model:
        | components['schemas']['DummyModel']
        | components['schemas']['MistralAiModel']
        | components['schemas']['OpenAiModel']
      settings: components['schemas']['ApiStrategySettings-Output']
    }
    /** ApiStrategySettings */
    'ApiStrategySettings-Input': {
      /** Name */
      name: string | null
      /** Systemprompt */
      systemPrompt: string
      /** Responsespecification */
      responseSpecification:
        | components['schemas']['JsonFromTextLlmResponseSpecification']
        | components['schemas']['JsonObjectLlmResponseSpecification']
        | components['schemas']['JsonSchemaLlmResponseSpecification']
    }
    /** ApiStrategySettings */
    'ApiStrategySettings-Output': {
      /** Name */
      name: string | null
      /** Systemprompt */
      systemPrompt: string
      /** Responsespecification */
      responseSpecification:
        | components['schemas']['JsonFromTextLlmResponseSpecification']
        | components['schemas']['JsonObjectLlmResponseSpecification']
        | components['schemas']['JsonSchemaLlmResponseSpecification']
    }
    /** ApiTextbook */
    ApiTextbook: {
      /** Id */
      id: string
      /** Createdby */
      createdBy: string
      /** Title */
      title: string
      /** Adaptationbatches */
      adaptationBatches: components['schemas']['patty__api_router__ApiTextbook__AdaptationBatch'][]
      /** Externalexercises */
      externalExercises: components['schemas']['ExternalExercise'][]
    }
    Arrow: {
      /**
       * Kind
       * @constant
       */
      kind: 'arrow'
    }
    /** AssistantInvalidJsonError */
    AssistantInvalidJsonError: {
      /**
       * Kind
       * @constant
       */
      kind: 'error'
      /**
       * Error
       * @constant
       */
      error: 'invalid-json'
      /** Parsed */
      parsed: unknown
    }
    /** AssistantNotJsonError */
    AssistantNotJsonError: {
      /**
       * Kind
       * @constant
       */
      kind: 'error'
      /**
       * Error
       * @constant
       */
      error: 'not-json'
      /** Text */
      text: string
    }
    /** AssistantSuccess */
    AssistantSuccess: {
      /**
       * Kind
       * @constant
       */
      kind: 'success'
      exercise: components['schemas']['patty__adapted__Exercise-Output']
    }
    /** AssistantUnknownError */
    AssistantUnknownError: {
      /**
       * Kind
       * @constant
       */
      kind: 'error'
      /**
       * Error
       * @constant
       */
      error: 'unknown'
    }
    'Choice-Input': {
      /**
       * Kind
       * @constant
       */
      kind: 'choice'
      /** Contents */
      contents: (
        | components['schemas']['Text']
        | components['schemas']['Whitespace']
        | components['schemas']['Arrow']
        | components['schemas']['Formatted-Input']
      )[]
    }
    'Choice-Output': {
      /**
       * Kind
       * @constant
       */
      kind: 'choice'
      /** Contents */
      contents: (
        | components['schemas']['Text']
        | components['schemas']['Whitespace']
        | components['schemas']['Arrow']
        | components['schemas']['Formatted-Output']
      )[]
    }
    /** ClassificationBatch */
    ClassificationBatch: {
      /** Id */
      id: string
      /** Createdby */
      createdBy: string
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string
    }
    /** ClassificationInput */
    ClassificationInput: {
      /** Pagenumber */
      pageNumber: number | null
      /** Exercisenumber */
      exerciseNumber: string | null
      /** Instructionexamplehinttext */
      instructionExampleHintText: string
      /** Statementtext */
      statementText: string
    }
    /** ClassificationStrategy */
    ClassificationStrategy: Record<string, never>
    /** DummyModel */
    DummyModel: {
      /**
       * Provider
       * @default dummy
       * @constant
       */
      provider: 'dummy'
      /**
       * Name
       * @enum {string}
       */
      name: 'dummy-1' | 'dummy-2' | 'dummy-3'
    }
    EditableTextInput: {
      /**
       * Kind
       * @constant
       */
      kind: 'editableTextInput'
      /** Contents */
      contents: (components['schemas']['Text'] | components['schemas']['Whitespace'])[]
    }
    /** ExampleComponents */
    ExampleComponents: {
      /**
       * Text
       * @constant
       */
      text: true
      /**
       * Whitespace
       * @constant
       */
      whitespace: true
      /**
       * Arrow
       * @constant
       */
      arrow: true
      /**
       * Formatted
       * @constant
       */
      formatted: true
    }
    'Exercise-Input': {
      /**
       * Format
       * @constant
       */
      format: 'v1'
      instruction: components['schemas']['Page_Union_Text__Whitespace__Arrow__Formatted__Choice__-Input']
      example: components['schemas']['Page_Union_Text__Whitespace__Arrow__Formatted__-Input'] | null
      hint: components['schemas']['Page_Union_Text__Whitespace__Arrow__Formatted__-Input'] | null
      statement: components['schemas']['Pages_Union_Text__Whitespace__Arrow__Formatted__FreeTextInput__MultipleChoicesInput__SelectableInput__SwappableInput__EditableTextInput__-Input']
      reference: components['schemas']['Line_Union_Text__Whitespace__Arrow__Formatted__-Input'] | null
    }
    /** ExternalExercise */
    ExternalExercise: {
      /** Id */
      id: string
      /** Pagenumber */
      pageNumber: number | null
      /** Exercisenumber */
      exerciseNumber: string | null
      /** Originalfilename */
      originalFileName: string
      /** Removedfromtextbook */
      removedFromTextbook: boolean
    }
    'Formatted-Input': {
      /**
       * Kind
       * @constant
       */
      kind: 'formatted'
      /** Contents */
      contents: (
        | components['schemas']['Text']
        | components['schemas']['Whitespace']
        | components['schemas']['Arrow']
        | components['schemas']['Formatted-Input']
      )[]
      /** Bold */
      bold: boolean
      /** Italic */
      italic: boolean
      /** Underlined */
      underlined: boolean
      /** Highlighted */
      highlighted: string | null
      /** Boxed */
      boxed: boolean
    }
    'Formatted-Output': {
      /**
       * Kind
       * @constant
       */
      kind: 'formatted'
      /** Contents */
      contents: (
        | components['schemas']['Text']
        | components['schemas']['Whitespace']
        | components['schemas']['Arrow']
        | components['schemas']['Formatted-Output']
      )[]
      /** Bold */
      bold: boolean
      /** Italic */
      italic: boolean
      /** Underlined */
      underlined: boolean
      /** Highlighted */
      highlighted: string | null
      /** Boxed */
      boxed: boolean
    }
    'FormattedTextContainer-Input': {
      /** Contents */
      contents: (
        | components['schemas']['Text']
        | components['schemas']['Whitespace']
        | components['schemas']['Arrow']
        | components['schemas']['Formatted-Input']
      )[]
    }
    'FormattedTextContainer-Output': {
      /** Contents */
      contents: (
        | components['schemas']['Text']
        | components['schemas']['Whitespace']
        | components['schemas']['Arrow']
        | components['schemas']['Formatted-Output']
      )[]
    }
    FreeTextInput: {
      /**
       * Kind
       * @constant
       */
      kind: 'freeTextInput'
    }
    /** GetAdaptationBatchResponse */
    GetAdaptationBatchResponse: {
      /** Id */
      id: string
      /** Createdby */
      createdBy: string
      strategy: components['schemas']['ApiStrategy-Output']
      /** Adaptations */
      adaptations: components['schemas']['ApiAdaptation'][]
    }
    /** GetAdaptationBatchesResponse */
    GetAdaptationBatchesResponse: {
      /** Adaptationbatches */
      adaptationBatches: components['schemas']['patty__api_router__GetAdaptationBatchesResponse__AdaptationBatch'][]
    }
    /** GetClassificationBatchResponse */
    GetClassificationBatchResponse: {
      /** Id */
      id: string
      /** Createdby */
      createdBy: string
      strategy: components['schemas']['ClassificationStrategy']
      /** Modelforadaptation */
      modelForAdaptation:
        | components['schemas']['DummyModel']
        | components['schemas']['MistralAiModel']
        | components['schemas']['OpenAiModel']
        | null
      /** Exercises */
      exercises: components['schemas']['patty__api_router__GetClassificationBatchResponse__Exercise'][]
    }
    /** GetClassificationBatchesResponse */
    GetClassificationBatchesResponse: {
      /** Classificationbatches */
      classificationBatches: components['schemas']['ClassificationBatch'][]
    }
    /** GetTextbookResponse */
    GetTextbookResponse: {
      textbook: components['schemas']['ApiTextbook']
      /** Availablestrategysettings */
      availableStrategySettings: string[]
    }
    /** GetTextbooksResponse */
    GetTextbooksResponse: {
      /** Textbooks */
      textbooks: components['schemas']['Textbook'][]
    }
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components['schemas']['ValidationError'][]
    }
    /** HintComponents */
    HintComponents: {
      /**
       * Text
       * @constant
       */
      text: true
      /**
       * Whitespace
       * @constant
       */
      whitespace: true
      /**
       * Arrow
       * @constant
       */
      arrow: true
      /**
       * Formatted
       * @constant
       */
      formatted: true
    }
    /** InstructionComponents */
    InstructionComponents: {
      /**
       * Text
       * @constant
       */
      text: true
      /**
       * Whitespace
       * @constant
       */
      whitespace: true
      /**
       * Arrow
       * @constant
       */
      arrow: true
      /**
       * Formatted
       * @constant
       */
      formatted: true
      /** Choice */
      choice: boolean
    }
    /** JsonFromTextLlmResponseSpecification */
    JsonFromTextLlmResponseSpecification: {
      /**
       * Format
       * @constant
       */
      format: 'json'
      /**
       * Formalism
       * @constant
       */
      formalism: 'text'
    }
    /** JsonObjectLlmResponseSpecification */
    JsonObjectLlmResponseSpecification: {
      /**
       * Format
       * @constant
       */
      format: 'json'
      /**
       * Formalism
       * @constant
       */
      formalism: 'json-object'
    }
    /** JsonSchemaLlmResponseSpecification */
    JsonSchemaLlmResponseSpecification: {
      /**
       * Format
       * @constant
       */
      format: 'json'
      /**
       * Formalism
       * @constant
       */
      formalism: 'json-schema'
      instructionComponents: components['schemas']['InstructionComponents']
      exampleComponents: components['schemas']['ExampleComponents']
      hintComponents: components['schemas']['HintComponents']
      statementComponents: components['schemas']['StatementComponents']
      referenceComponents: components['schemas']['ReferenceComponents']
    }
    /** LatestAdaptationBatch */
    LatestAdaptationBatch: {
      /** Id */
      id: string
      strategy: components['schemas']['ApiStrategy-Output']
      /** Inputs */
      inputs: components['schemas']['ApiInput'][]
      /** Availablestrategysettings */
      availableStrategySettings: components['schemas']['ApiStrategySettings-Output'][]
    }
    'Line_Union_Text__Whitespace__Arrow__Formatted__-Input': {
      /** Contents */
      contents: (
        | components['schemas']['Text']
        | components['schemas']['Whitespace']
        | components['schemas']['Arrow']
        | components['schemas']['Formatted-Input']
      )[]
    }
    'Line_Union_Text__Whitespace__Arrow__Formatted__-Output': {
      /** Contents */
      contents: (
        | components['schemas']['Text']
        | components['schemas']['Whitespace']
        | components['schemas']['Arrow']
        | components['schemas']['Formatted-Output']
      )[]
    }
    'Line_Union_Text__Whitespace__Arrow__Formatted__Choice__-Input': {
      /** Contents */
      contents: (
        | components['schemas']['Text']
        | components['schemas']['Whitespace']
        | components['schemas']['Arrow']
        | components['schemas']['Formatted-Input']
        | components['schemas']['Choice-Input']
      )[]
    }
    'Line_Union_Text__Whitespace__Arrow__Formatted__Choice__-Output': {
      /** Contents */
      contents: (
        | components['schemas']['Text']
        | components['schemas']['Whitespace']
        | components['schemas']['Arrow']
        | components['schemas']['Formatted-Output']
        | components['schemas']['Choice-Output']
      )[]
    }
    'Line_Union_Text__Whitespace__Arrow__Formatted__FreeTextInput__MultipleChoicesInput__SelectableInput__SwappableInput__EditableTextInput__-Input': {
      /** Contents */
      contents: (
        | components['schemas']['Text']
        | components['schemas']['Whitespace']
        | components['schemas']['Arrow']
        | components['schemas']['Formatted-Input']
        | components['schemas']['FreeTextInput']
        | components['schemas']['MultipleChoicesInput-Input']
        | components['schemas']['SelectableInput-Input']
        | components['schemas']['SwappableInput-Input']
        | components['schemas']['EditableTextInput']
      )[]
    }
    'Line_Union_Text__Whitespace__Arrow__Formatted__FreeTextInput__MultipleChoicesInput__SelectableInput__SwappableInput__EditableTextInput__-Output': {
      /** Contents */
      contents: (
        | components['schemas']['Text']
        | components['schemas']['Whitespace']
        | components['schemas']['Arrow']
        | components['schemas']['Formatted-Output']
        | components['schemas']['FreeTextInput']
        | components['schemas']['MultipleChoicesInput-Output']
        | components['schemas']['SelectableInput-Output']
        | components['schemas']['SwappableInput-Output']
        | components['schemas']['EditableTextInput']
      )[]
    }
    /** MistralAiModel */
    MistralAiModel: {
      /**
       * Provider
       * @default mistralai
       * @constant
       */
      provider: 'mistralai'
      /**
       * Name
       * @enum {string}
       */
      name: 'mistral-large-2411' | 'mistral-small-2501'
    }
    'MultipleChoicesInput-Input': {
      /**
       * Kind
       * @constant
       */
      kind: 'multipleChoicesInput'
      /** Choices */
      choices: components['schemas']['FormattedTextContainer-Input'][]
      /** Showchoicesbydefault */
      showChoicesByDefault: boolean
    }
    'MultipleChoicesInput-Output': {
      /**
       * Kind
       * @constant
       */
      kind: 'multipleChoicesInput'
      /** Choices */
      choices: components['schemas']['FormattedTextContainer-Output'][]
      /** Showchoicesbydefault */
      showChoicesByDefault: boolean
    }
    /** OpenAiModel */
    OpenAiModel: {
      /**
       * Provider
       * @default openai
       * @constant
       */
      provider: 'openai'
      /**
       * Name
       * @enum {string}
       */
      name: 'gpt-4o-2024-08-06' | 'gpt-4o-mini-2024-07-18'
    }
    'Page_Union_Text__Whitespace__Arrow__Formatted__-Input': {
      /** Lines */
      lines: components['schemas']['Line_Union_Text__Whitespace__Arrow__Formatted__-Input'][]
    }
    'Page_Union_Text__Whitespace__Arrow__Formatted__-Output': {
      /** Lines */
      lines: components['schemas']['Line_Union_Text__Whitespace__Arrow__Formatted__-Output'][]
    }
    'Page_Union_Text__Whitespace__Arrow__Formatted__Choice__-Input': {
      /** Lines */
      lines: components['schemas']['Line_Union_Text__Whitespace__Arrow__Formatted__Choice__-Input'][]
    }
    'Page_Union_Text__Whitespace__Arrow__Formatted__Choice__-Output': {
      /** Lines */
      lines: components['schemas']['Line_Union_Text__Whitespace__Arrow__Formatted__Choice__-Output'][]
    }
    'Page_Union_Text__Whitespace__Arrow__Formatted__FreeTextInput__MultipleChoicesInput__SelectableInput__SwappableInput__EditableTextInput__-Input': {
      /** Lines */
      lines: components['schemas']['Line_Union_Text__Whitespace__Arrow__Formatted__FreeTextInput__MultipleChoicesInput__SelectableInput__SwappableInput__EditableTextInput__-Input'][]
    }
    'Page_Union_Text__Whitespace__Arrow__Formatted__FreeTextInput__MultipleChoicesInput__SelectableInput__SwappableInput__EditableTextInput__-Output': {
      /** Lines */
      lines: components['schemas']['Line_Union_Text__Whitespace__Arrow__Formatted__FreeTextInput__MultipleChoicesInput__SelectableInput__SwappableInput__EditableTextInput__-Output'][]
    }
    'Pages_Union_Text__Whitespace__Arrow__Formatted__FreeTextInput__MultipleChoicesInput__SelectableInput__SwappableInput__EditableTextInput__-Input': {
      /** Pages */
      pages: components['schemas']['Page_Union_Text__Whitespace__Arrow__Formatted__FreeTextInput__MultipleChoicesInput__SelectableInput__SwappableInput__EditableTextInput__-Input'][]
    }
    'Pages_Union_Text__Whitespace__Arrow__Formatted__FreeTextInput__MultipleChoicesInput__SelectableInput__SwappableInput__EditableTextInput__-Output': {
      /** Pages */
      pages: components['schemas']['Page_Union_Text__Whitespace__Arrow__Formatted__FreeTextInput__MultipleChoicesInput__SelectableInput__SwappableInput__EditableTextInput__-Output'][]
    }
    /** PostAdaptationAdjustmentRequest */
    PostAdaptationAdjustmentRequest: {
      /** Adjustment */
      adjustment: string
    }
    /** PostAdaptationBatchRequest */
    PostAdaptationBatchRequest: {
      /** Creator */
      creator: string
      strategy: components['schemas']['ApiStrategy-Input']
      /** Inputs */
      inputs: components['schemas']['ApiInput'][]
    }
    /** PostAdaptationBatchResponse */
    PostAdaptationBatchResponse: {
      /** Id */
      id: string
    }
    /** PostClassificationBatchRequest */
    PostClassificationBatchRequest: {
      /** Creator */
      creator: string
      strategy: components['schemas']['ClassificationStrategy']
      /** Inputs */
      inputs: components['schemas']['ClassificationInput'][]
      /** Modelforadaptation */
      modelForAdaptation:
        | components['schemas']['DummyModel']
        | components['schemas']['MistralAiModel']
        | components['schemas']['OpenAiModel']
        | null
    }
    /** PostClassificationBatchResponse */
    PostClassificationBatchResponse: {
      /** Id */
      id: string
    }
    /** PostTextbookAdaptationBatchRequest */
    PostTextbookAdaptationBatchRequest: {
      /** Creator */
      creator: string
      /** Model */
      model:
        | components['schemas']['DummyModel']
        | components['schemas']['MistralAiModel']
        | components['schemas']['OpenAiModel']
      /** Branchname */
      branchName: string
      /** Inputs */
      inputs: components['schemas']['ApiInput'][]
    }
    /** PostTextbookExternalExercisesRequest */
    PostTextbookExternalExercisesRequest: {
      /** Creator */
      creator: string
      /** Pagenumber */
      pageNumber: number | null
      /** Exercisenumber */
      exerciseNumber: string | null
      /** Originalfilename */
      originalFileName: string
    }
    /** PostTextbookExternalExercisesResponse */
    PostTextbookExternalExercisesResponse: {
      /** Puturl */
      putUrl: string
    }
    /** PostTextbookRequest */
    PostTextbookRequest: {
      /** Creator */
      creator: string
      /** Title */
      title: string
    }
    /** PostTextbookResponse */
    PostTextbookResponse: {
      /** Id */
      id: string
    }
    /** PostTokenRequest */
    PostTokenRequest: {
      /** Password */
      password: string
      /**
       * Validity
       * Format: duration
       * @default PT3H
       */
      validity: string
    }
    /** PostTokenResponse */
    PostTokenResponse: {
      /** Accesstoken */
      accessToken: string
      /**
       * Validuntil
       * Format: date-time
       */
      validUntil: string
      /**
       * Tokentype
       * @default bearer
       */
      tokenType: string
    }
    /** ReferenceComponents */
    ReferenceComponents: {
      /**
       * Text
       * @constant
       */
      text: true
      /**
       * Whitespace
       * @constant
       */
      whitespace: true
      /**
       * Arrow
       * @constant
       */
      arrow: true
      /**
       * Formatted
       * @constant
       */
      formatted: true
    }
    'SelectableInput-Input': {
      /**
       * Kind
       * @constant
       */
      kind: 'selectableInput'
      /** Contents */
      contents: (
        | components['schemas']['Text']
        | components['schemas']['Whitespace']
        | components['schemas']['Arrow']
        | components['schemas']['Formatted-Input']
      )[]
      /** Colors */
      colors: string[]
      /** Boxed */
      boxed: boolean
    }
    'SelectableInput-Output': {
      /**
       * Kind
       * @constant
       */
      kind: 'selectableInput'
      /** Contents */
      contents: (
        | components['schemas']['Text']
        | components['schemas']['Whitespace']
        | components['schemas']['Arrow']
        | components['schemas']['Formatted-Output']
      )[]
      /** Colors */
      colors: string[]
      /** Boxed */
      boxed: boolean
    }
    /** StatementComponents */
    StatementComponents: {
      /**
       * Text
       * @constant
       */
      text: true
      /**
       * Whitespace
       * @constant
       */
      whitespace: true
      /**
       * Arrow
       * @constant
       */
      arrow: true
      /**
       * Formatted
       * @constant
       */
      formatted: true
      /** Freetextinput */
      freeTextInput: boolean
      /** Multiplechoicesinput */
      multipleChoicesInput: boolean
      /** Selectableinput */
      selectableInput: boolean
      /** Swappableinput */
      swappableInput: boolean
      /** Editabletextinput */
      editableTextInput: boolean
    }
    'SwappableInput-Input': {
      /**
       * Kind
       * @constant
       */
      kind: 'swappableInput'
      /** Contents */
      contents: (
        | components['schemas']['Text']
        | components['schemas']['Whitespace']
        | components['schemas']['Arrow']
        | components['schemas']['Formatted-Input']
      )[]
    }
    'SwappableInput-Output': {
      /**
       * Kind
       * @constant
       */
      kind: 'swappableInput'
      /** Contents */
      contents: (
        | components['schemas']['Text']
        | components['schemas']['Whitespace']
        | components['schemas']['Arrow']
        | components['schemas']['Formatted-Output']
      )[]
    }
    Text: {
      /**
       * Kind
       * @constant
       */
      kind: 'text'
      /** Text */
      text: string
    }
    /** Textbook */
    Textbook: {
      /** Id */
      id: string
      /** Createdby */
      createdBy: string
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string
      /** Title */
      title: string
    }
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[]
      /** Message */
      msg: string
      /** Error Type */
      type: string
    }
    Whitespace: {
      /**
       * Kind
       * @constant
       */
      kind: 'whitespace'
    }
    'patty__adapted__Exercise-Output': {
      /**
       * Format
       * @constant
       */
      format: 'v1'
      instruction: components['schemas']['Page_Union_Text__Whitespace__Arrow__Formatted__Choice__-Output']
      example: components['schemas']['Page_Union_Text__Whitespace__Arrow__Formatted__-Output'] | null
      hint: components['schemas']['Page_Union_Text__Whitespace__Arrow__Formatted__-Output'] | null
      statement: components['schemas']['Pages_Union_Text__Whitespace__Arrow__Formatted__FreeTextInput__MultipleChoicesInput__SelectableInput__SwappableInput__EditableTextInput__-Output']
      reference: components['schemas']['Line_Union_Text__Whitespace__Arrow__Formatted__-Output'] | null
    }
    /** AdaptationBatch */
    patty__api_router__ApiTextbook__AdaptationBatch: {
      /** Id */
      id: string
      strategy: components['schemas']['ApiStrategy-Output']
      /** Adaptations */
      adaptations: components['schemas']['ApiAdaptation'][]
      /** Removedfromtextbook */
      removedFromTextbook: boolean
    }
    /** AdaptationBatch */
    patty__api_router__GetAdaptationBatchesResponse__AdaptationBatch: {
      /** Id */
      id: string
      /** Createdby */
      createdBy: string
      /**
       * Createdat
       * Format: date-time
       */
      createdAt: string
      /** Model */
      model:
        | components['schemas']['DummyModel']
        | components['schemas']['MistralAiModel']
        | components['schemas']['OpenAiModel']
      /** Strategysettingsname */
      strategySettingsName: string | null
    }
    /** Exercise */
    patty__api_router__GetClassificationBatchResponse__Exercise: {
      /** Pagenumber */
      pageNumber: number | null
      /** Exercisenumber */
      exerciseNumber: string | null
      /** Fulltext */
      fullText: string
      /** Exerciseclass */
      exerciseClass: string | null
      /** Exerciseclasshassettings */
      exerciseClassHasSettings: boolean
      adaptation: components['schemas']['ApiAdaptation'] | null
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  get_health_api_health_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            [key: string]: string
          }
        }
      }
    }
  }
  get_health_api_health_head: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            [key: string]: string
          }
        }
      }
    }
  }
  get_available_llm_models_api_available_llm_models_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': (
            | components['schemas']['DummyModel']
            | components['schemas']['MistralAiModel']
            | components['schemas']['OpenAiModel']
          )[]
        }
      }
    }
  }
  get_llm_response_schema_api_adaptation_llm_response_schema_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['JsonSchemaLlmResponseSpecification']
      }
    }
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': Record<string, never>
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  get_latest_adaptation_batch_api_latest_adaptation_batch_get: {
    parameters: {
      query: {
        user: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['LatestAdaptationBatch']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  get_adaptation_batches_api_adaptation_batches_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['GetAdaptationBatchesResponse']
        }
      }
    }
  }
  post_adaptation_batch_api_adaptation_batches_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PostAdaptationBatchRequest']
      }
    }
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PostAdaptationBatchResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  get_adaptation_batch_api_adaptation_batches__id__get: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['GetAdaptationBatchResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  get_classification_batches_api_classification_batches_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['GetClassificationBatchesResponse']
        }
      }
    }
  }
  create_classification_batch_api_classification_batches_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PostClassificationBatchRequest']
      }
    }
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PostClassificationBatchResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  get_classification_batch_api_classification_batches__id__get: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['GetClassificationBatchResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  get_textbooks_api_textbooks_get: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['GetTextbooksResponse']
        }
      }
    }
  }
  post_textbook_api_textbooks_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PostTextbookRequest']
      }
    }
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PostTextbookResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  get_textbook_api_textbooks__id__get: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['GetTextbookResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  post_textbook_adaptation_batch_api_textbooks__id__adaptation_batches_post: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PostTextbookAdaptationBatchRequest']
      }
    }
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ApiTextbook']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  put_textbook_adaptation_batch_removed_api_textbooks__textbook_id__adaptation_batches__adaptation_batch_id__removed_put: {
    parameters: {
      query: {
        removed: boolean
      }
      header?: never
      path: {
        textbook_id: string
        adaptation_batch_id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ApiTextbook']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  put_textbook_adaptation_removed_api_textbooks__textbook_id__adaptations__adaptation_id__removed_put: {
    parameters: {
      query: {
        removed: boolean
      }
      header?: never
      path: {
        textbook_id: string
        adaptation_id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ApiTextbook']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  post_textbook_external_exercises_api_textbooks__textbook_id__external_exercises_post: {
    parameters: {
      query?: never
      header?: never
      path: {
        textbook_id: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PostTextbookExternalExercisesRequest']
      }
    }
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PostTextbookExternalExercisesResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  put_textbook_external_exercises_removed_api_textbooks__textbook_id__external_exercises__external_exercise_id__removed_put: {
    parameters: {
      query: {
        removed: boolean
      }
      header?: never
      path: {
        textbook_id: string
        external_exercise_id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ApiTextbook']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  get_adaptation_api_adaptations__id__get: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ApiAdaptation']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  post_adaptation_adjustment_api_adaptations__id__adjustment_post: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PostAdaptationAdjustmentRequest']
      }
    }
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ApiAdaptation']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  delete_adaptation_last_adjustment_api_adaptations__id__last_adjustment_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ApiAdaptation']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  put_adaptation_manual_edit_api_adaptations__id__manual_edit_put: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['Exercise-Input']
      }
    }
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ApiAdaptation']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  delete_adaptation_manual_edit_api_adaptations__id__manual_edit_delete: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ApiAdaptation']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  export_adaptation_batch_api_export_adaptation_batch__id__html_get: {
    parameters: {
      query: {
        download?: boolean
        token: string
      }
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/html': string
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  export_adaptation_api_export_adaptation__id__html_get: {
    parameters: {
      query: {
        download?: boolean
        token: string
      }
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/html': string
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  export_textbook_api_export_textbook__id__html_get: {
    parameters: {
      query: {
        download?: boolean
        token: string
      }
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'text/html': string
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
  login_api_token_post: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PostTokenRequest']
      }
    }
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PostTokenResponse']
        }
      }
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HTTPValidationError']
        }
      }
    }
  }
}
